package binary_test

import (
	"bytes"
	"testing"

	"github.com/thehowl/binary"
)

const unmsh = "\x01\x01\x00\x01\xac\x3d\xaf\x47\x00\x00\x00\x00\x00\x00\xfa\x42\x00\x00\x00\x00\x00\x00\x11\x43\x00\x00\x00\x00\x00\x00\x40\x41\x00\x00\x00\x00\x00\x00\x4c\x42\x00\x00\x00\x00\x9d\x64\xab\xcb\xfa\xf0\xd7\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3c\xd9\x3d\x41\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x79\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x5f\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x28\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x44\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x44\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x40\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x85\xeb\x51\xb8\x1e\x09\x40\x1f\x85\xeb\x51\xb8\x1e\x09\x40\x00\x00\x00\x00\x00\x80\x44\x40\xca\x32\xc4\xb1\xee\xe6\x94\x40\xcd\xcc\x64\x41\x00\x00\x70\x41\x00\x00\x80\x3f\x00\x00\x00\x44\x25\x33\x48\x47\x7b\x70\x9c\x44\x80\x79\x2d\x2a\x4b\x14\xff\x7f\x39\x05\xff\xff\x00\x80\x79\x47\x69\x36\x61\x6b\x6f\x6a\x67\x61\x6b\x67\x6a\x6c\x6b\x65\x6a\x6a\x79\x6c\x08\x23\x00\x00\xcb\x5f\x00\x00\xe9\x14\x00\x00\xa9\xe9\x24\xab\x3c\x36\xde\xff\x43\x53\x85\x5d\x00\x00\x00\x00\xae\x5a\xef\x62\xb1\x8d\xff\xff\x5c\x18\x00\x00\x00\x00\x00\x00\x67\x98\x03\x00\x00\x00\x00\x00\xb8\xff\xff\xff\xff\xff\xff\xff\xd3\x02\x00\x00\x00\x00\x00\x00\x49\x00\x00\x00\x00\x00\x00\x00\x39\x00\x00\x00\x00\x00\x00\x00\x5b\x01\x00\x00\x00\x00\x00\x00\x49\x00\x00\x00\x00\x00\x00\x00\x39\x00\x00\x00\x00\x00\x00\x00\x65\x01\x00\x00\x00\x00\x00\x00\xff\xe4\xb8\x96\xe7\x95\x8c\xff\xfe\xf5\xf4\xe9\x0c\x4a\x7d\x0d\x92\x5b\x03\x00\x10\xf2\x76\x05\x3f\x2d\x26\x00\xee\x09\x00\x00\xe7\x86\x00\x00\xb4\x94\xaa\x41\x1f\x58\x00\x00\x0e\xb5\x8d\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\xf7\x15\x00\x00\x00\x00\x00\x00\x6f\x02\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\xec\x00\x00\x00\x00\x00\x00\x00\xc7\x77\x68\x01\x00\x00\x00\x00\x57\x65\x27\x72\x65\x20\x66\x69\x6e\x61\x6c\x6c\x79\x20\x64\x6f\x6e\x65\x2e"

func TestRead(t *testing.T) {
	buf := bytes.NewBuffer(
		[]byte(unmsh),
	)
	r := &binary.ReadChain{
		Reader:    buf,
		ByteOrder: binary.LittleEndian,
	}
	{
		var x bool
		r.Bool(&x)
		if x != true {
			t.Error("meme!")
		}
	}
	// I should also do all the other types, but I can't be bothered.
}
